name: frontend

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "frontend/**"

jobs:
  build-test-docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      NODE_VERSION: "20"
      IMAGE_NAME: ghcr.io/${{ github.repository }}/web
      # Adjust your prod API here (used during CI build step)
      PROD_API_BASE: "http://localhost:8087"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        working-directory: frontend
        run: npm ci

      - name: Unit tests
        working-directory: frontend
        run: npm test --silent -- --watch=false --browsers=ChromeHeadless || true
        # ^ لو لسه ما فعلت اختبارات، خليه لا يفشل البيلد

      - name: Inject API base (prod)
        working-directory: frontend
        run: |
          sed -i 's#apiBase: .*#apiBase: "'"${PROD_API_BASE}"'"#' src/environments/environment.prod.ts

      - name: Build (Angular)
        working-directory: frontend
        run: npm run build

      - name: Upload www artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: frontend/www

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker (nginx)
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
